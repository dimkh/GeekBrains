import numpy as np

def sort_quick(start: int, end: int) -> None:
    """ Сортировка массива по возрастанию методом быстрой сортировки.
    Используется только один массив (глобальный),
    работа ведётся только с индексами и перестановкой элементов.
    На входе: первый и последний индекс подмассива для сортировки.
    Используется рекурсия для обработки подмассивов.
    """

    if start < end:             # В массиве ещё есть элементы
        pivot = array[np.random.randint(start, end)]  # Опорный элемент выбираем случайно
        i, j = start, end

        while i <= j:
            # Пока элементы расположены "правильно" (слева - меньше, справа - больше) - пропускаем их
            while array[i] < pivot:
                i += 1
            while array[j] > pivot:
                j -= 1

            # Неправильное расположение - меняем их местами
            if i <= j:
                array[i], array[j] = array[j], array[i]
                i += 1
                j -= 1

            # Рекурсивно обрабатываем полученные 2 подмассива
            sort_quick(start, j)
            sort_quick(i, end)

    return None


m = 5
count_elem = 2 * m + 1

# Генерируем тестовый массив из count_elem элементов
array = np.random.randint(0, 100, count_elem)

print(f'\nИсходный массив из {count_elem} элементов:')
print(array)
print(f'\nОтсортированный по возрастанию массив:')
sort_quick(0, count_elem - 1)
print(array, '\n')

# По условиям задания массив состоит из нечётного количества элементов.
# Значит, медиана - средний элемент массива
# (его индекс равен m, даже искать не нужно).

print(f'Медиана данного массива - число {array[m]}', '\n')